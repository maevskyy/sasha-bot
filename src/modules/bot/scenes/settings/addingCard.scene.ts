import { Composer, Scenes } from "telegraf";
import { EBotScenes, IMyContext } from "../../types";
import { createKeyboard } from "../../common/keyboards";
import { message } from "telegraf/filters";
import { createCard, getCardsByUserId } from "../../../db";

const firstStep = new Composer<IMyContext>();
firstStep.on(message("text"), async (ctx) => {
  const userInput = ctx.message?.text ?? "";

  const userCards = await getCardsByUserId(ctx.chat?.id ?? 0);

  const isNameTaken = userCards?.some((card) => card.name === userInput);

  if (isNameTaken) {
    const errorText = "–£ –≤–∞—Å —É–∂–µ —î –∫–∞—Ä—Ç–∫–∞ –∑ —Ç–∞–∫–æ—é –Ω–∞–∑–≤–æ—é.";
    await ctx.reply(errorText);
    return ctx.wizard.selectStep(0);
  }

  const text = "–î–æ–¥–∞–π—Ç–µ –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç–∏";
  (ctx as IMyContext).session.newCard.name = userInput;
  ctx.reply(text);
  ctx.wizard.next();
});

const secondStep = new Composer<IMyContext>();
secondStep.on(message("text"), async (ctx) => {
  const userInput = ctx.message?.text ?? "";
  const text = "–î–æ–¥–∞–π—Ç–µ –±–∞–Ω–∫";
  (ctx as IMyContext).session.newCard.card = userInput;
  ctx.reply(text);
  return ctx.wizard.next();
});

const thirdStep = new Composer<IMyContext>();
thirdStep.on(message("text"), async (ctx) => {
  const userInput = ctx.message?.text ?? "";

  const text = "–î–æ–¥–∞–π—Ç–µ –±–∞–ª–∞–Ω—Å";
  ctx.session.newCard.bank = userInput;
  ctx.reply(text);
  return ctx.wizard.next();
});

const fourthStep = new Composer<IMyContext>();
fourthStep.on(message("text"), async (ctx) => {
  const userInput = ctx.message?.text ?? "";

  const isValidNumber = /^\d+$/.test(userInput);
  if (!isValidNumber) {
    const errorText = "–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å —Ç—ñ–ª—å–∫–∏ —Ü–∏—Ñ—Ä–∏ –¥–ª—è –±–∞–ª–∞–Ω—Å—É.";
    await ctx.reply(errorText);
    return ctx.wizard.back();
  }
  ctx.session.newCard.balance = userInput;
  const { name, balance, bank, card } = ctx.session.newCard;
  const writeCardToDb = await createCard({
    user_id: ctx.chat.id,
    card_number: card,
    name,
    balance,
    bank,
  });
  let text = "–í–∏ —É—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–∏–ª–∏ –∫–∞—Ä—Ç–∫—É!";

  if(!writeCardToDb) text = '–ü–æ–º–∏–ª–∫–∞, –¥–æ–¥–∞—Ç–∏ –∫–∞—Ä—Ç–∫—É –Ω–µ –≤–∏–π—à–ª–æ'

  ctx.reply(text);
  await ctx.scene.leave();
  return ctx.scene.enter(EBotScenes.SETTINGS);
});

// ============ REGISTER_SCENE ============
const addCardScene = new Scenes.WizardScene<IMyContext>(
  EBotScenes.ADDCARD,
  firstStep,
  secondStep,
  thirdStep,
  fourthStep
);
addCardScene.enter((ctx) => {
  const text = "–î–æ–¥–∞–π—Ç–µ –Ω–∞–∑–≤—É –∫–∞—Ä—Ç–∏";
  if (!ctx.session.newCard) {
    ctx.session.newCard = { name: "", bank: "", balance: "", card: "" };
  }
  const keyboard = createKeyboard([["–í—ñ–¥–º—ñ–Ω–∏—Ç–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–∞—Ä—Ç–∫–∏ üõë"]]);
  ctx.reply(text, keyboard);
});
addCardScene.hears("–í—ñ–¥–º—ñ–Ω–∏—Ç–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–∞—Ä—Ç–∫–∏ üõë", async (ctx) => {
  await ctx.scene.leave();
  return ctx.scene.enter(EBotScenes.SETTINGS);
});
export { addCardScene };

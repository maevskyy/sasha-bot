import { IDBCard } from "../../../../../common";
import { IPreparedTransaction } from "./types";

const cardsInlineKeybord = (
  cards: IDBCard[]
): { text: string; callback_data: string }[][] => {
  const result: { text: string; callback_data: string }[][] = [];

  for (let i = 0; i < cards.length; i += 3) {
    const row = cards.slice(i, i + 3).map((card, index) => ({
      text: card.name,
      callback_data: `statistic_card_${i + index}_${card.id}`,
    }));
    result.push(row);
  }
  result.push([
    {
      text: "–í—Å—ñ –∫–∞—Ä—Ç–∏",
      callback_data: "statistic_card_0_all",
    },
  ]);

  return result;
};

const cardStatisticText = (
  transactionsInfo: IPreparedTransaction,
  cardName: string = "–≤—Å—ñ –∫–∞—Ä—Ç–∫–∏"
) => {
  const {
    totalAmount,
    totalQty,
    dayAmount,
    dayQty,
    weekAmount,
    weekQty,
    monthAmount,
    monthQty,
  } = transactionsInfo;

  return (
    `–ö–∞—Ä—Ç–∫–∞: ${cardName}\n` +
    `–í—Å—å–æ–≥–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π: ${totalQty}\n` +
    `–ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞: ${totalAmount} –≥—Ä–Ω\n\n` +
    `üìÖ –ó–∞ —Å—å–æ–≥–æ–¥–Ω—ñ: ${dayQty} —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π –Ω–∞ —Å—É–º—É ${dayAmount} –≥—Ä–Ω\n` +
    `üìÜ –ó–∞ —Ç–∏–∂–¥–µ–Ω—å: ${weekQty} —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π –Ω–∞ —Å—É–º—É ${weekAmount} –≥—Ä–Ω\n` +
    `üóìÔ∏è –ó–∞ –º—ñ—Å—è—Ü—å: ${monthQty} —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π –Ω–∞ —Å—É–º—É ${monthAmount} –≥—Ä–Ω`
  );
};

export { cardsInlineKeybord, cardStatisticText };

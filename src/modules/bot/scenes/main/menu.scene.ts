import { Composer, Scenes } from "telegraf";
import { EBotScenes, IMyContext } from "../../types";
import { message } from "telegraf/filters";
import { createKeyboard } from "../../common/keyboards";

const main = new Composer<IMyContext>();
main.hears("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ üìä", async (ctx) => {
    await ctx.scene.leave();
    return ctx.scene.enter(EBotScenes.STATISTIC);
});
main.hears('–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è ‚öô',async  (ctx) => {
  await ctx.scene.leave()
  return ctx.scene.enter(EBotScenes.SETTINGS)
});
main.hears("–¢—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó üí≥", async (ctx) => {
    await ctx.scene.leave();
    return ctx.scene.enter(EBotScenes.TRANSACTIONS);
});

main.on(message("text"), (ctx) => {
  ctx.reply("–ù–µ —Ä–æ–∑—É–º—ñ—é");
});


// ============ REGISTER_SCENE ============
const menuScene = new Scenes.WizardScene<IMyContext>(
  EBotScenes.MENU,
  main,
);
menuScene.enter((ctx) => {
  const keyboard = createKeyboard([
    ["–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ üìä", "–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è ‚öô"],
    ["–¢—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó üí≥"],
  ]);
  ctx.reply("–í–∏ –≤ –º–µ–Ω—é", keyboard);
});
export { menuScene };
